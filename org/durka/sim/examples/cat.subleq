 (+ 3 Z) (+ 2 Z) ; store a -1 at TWO and a 1 at THREE and a 0 at FOUR
 (inc Z) (+ 3 Z)
 (inc Z) (+ 3 Z)
 (+ 4 Z)

= ONE (inc Z)
= INC (+ 2 Z)
= CMP (+ 3 Z)
= ZZ (+ 4 Z)

; addition of from to to. side effect: zero is cleared
Macro add from to zero
 zero
 from zero
 zero to
End

Macro addz from to ; would be nice if I implemented multiple arities for same macro
 add from to Z
End

; perform the convolutions necessary to write a specific value to IN
; side effect: zero is cleared
Macro write-in from zero
 add IN from zero
 from IN
End

Macro write-inz from
 write-in from Z
End

:loop
 IN Z ; read a byte of input
 Z CMP exit ; if EOF, IN=-1, so Z=1, and 1 - -(-1) = 0
 Z OUT ; if we are still here, copy input to output
 INC count
 Z
 count Z
 write-in Z ZZ ; ask for the next byte of input
 CMP ; reset Z=0 and CMP=1
 addz ONE CMP
 Z Z loop
:exit
 INC count
 write-inz count
:count
. 0
